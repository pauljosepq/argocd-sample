services:
  frontend:
    build: 
      context: .
      dockerfile: ./Dockerfiles/frontend.Dockerfile
    ports:
      - "4000:4000"
    depends_on:
      - backend
    # Copy the Nginx configuration file
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      # Use healthcheck instead of readinessProbe for Docker Compose
      test: [ "CMD-SHELL", "curl -f http://backend:3000/health || exit 1" ] # Check /health
      interval: 10s # Check every 10 seconds
      timeout: 5s # Timeout after 5 seconds
      retries: 5 # Retry 5 times before considering unhealthy
      start_period: 30s
    networks:
      - login-app-net

  backend:
    build: 
      context: .
      dockerfile: ./Dockerfiles/backend.Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - database
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://admin:admin@database:27017
      - JWT_SECRET=your_secret_key
    networks:
      - login-app-net

  database:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - login-app-net

networks:
  login-app-net:
    driver: bridge

volumes:
  mongodb-data:
